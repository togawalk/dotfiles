#!/bin/sh

## Collect data
cache_dir="$HOME/.cache/eww/weather"
cache_weather_desc=${cache_dir}/weather-desc
cache_weather_degree=${cache_dir}/weather-degree
cache_weather_feels_like=${cache_dir}/weather-feels-like

## Weather data
KEY=""
ID=""
UNIT="metric"	# Available options : 'metric' or 'imperial'

## Make cache dir
if [[ ! -d "$cache_dir" ]]; then
	mkdir -p ${cache_dir}
fi

## Get data
get_weather_data() {
	weather=`curl -sf "http://api.openweathermap.org/data/2.5/weather?APPID="$KEY"&id="$ID"&units="$UNIT""`
	echo ${weather}

	if [ ! -z "$weather" ]; then
		weather_temp=`echo "$weather" | jq ".main.temp"`
		weather_temp=`$HOME/.local/bin/round ${weather_temp}`

		weather_feels_like=`echo "$weather" | jq ".main.feels_like"`
		weather_feels_like=`$HOME/.local/bin/round ${weather_feels_like}`

		weather_description=`echo "$weather" | jq -r ".weather[].description" | head -1 | sed -e "s/\b\(.\)/\u\1/g"`

		echo "$weather_description" > ${cache_weather_desc}
		echo "$weather_temp" > ${cache_weather_degree}
		echo "$weather_feels_like" > ${cache_weather_feels_like}
	else
		echo "Weather Unavailable" > ${cache_weather_desc}
		echo "none" > ${cache_weather_degree}
		echo "none" > ${cache_weather_feels_like}
	fi
}

## Execute
if [[ "$1" == "--getdata" ]]; then
	get_weather_data
elif [[ "$1" == "--temp" ]]; then
	cat ${cache_weather_degree}
elif [[ "$1" == "--feels_like" ]]; then
	cat ${cache_weather_feels_like}
elif [[ "$1" == "--desc" ]]; then
	cat ${cache_weather_desc}
fi

