(include "pollers.yuck")
(include "listeners.yuck")

(defwidget bar []
  (box :orientation "h" :class "bar"
    (left)
    (right)))

(defwidget left []
  (box :orientation "h" :space-evenly false :spacing 10
    (nix)
    (workspaces)))

(defwidget right []
  (box :orientation "h" :space-evenly false :spacing 10 :halign "end"
    (battery)
    (ram)
    (disk)
    (date)
    (kb_layout)
    (utils)))

;; LEFT
(defwidget nix []
  (box
    (button :class "icon nix" :onclick "kitty -e btm"
      (label :text " "))))

(defwidget workspaces []
  (box :space-evenly false :class "component workspaces" :spacing 5
    (for workspace in workspaces
      (button :onclick "hyprctl dispatch workspace ${workspace.id}"
        :class "workspace-entry ${workspace.active ? "current-workspace" : ""} ${workspace.windows > 0 ? "occupied-workspace" : "empty-workspace"}"
        (label :text "${workspace.name}")))))

;; RIGHT
(defwidget battery []
  (box :class "component mauve"
    (label :class "" :text "󰁿 ${battery}%")))

(defwidget ram []
  (box :class "component mauve"
    (label :text "ram: ${ram}")))

(defwidget disk []
  (box :class "component mauve"
    (label :text "free: ${disk}")))

(defwidget date []
  (box :class "component mauve"
    (label :text "${date}")))

(defwidget kb_layout []
  (box :class "component mauve"
    (button :onclick "hyprctl switchxkblayout at-translated-set-2-keyboard next"
      (label :text " ${kb_layout}"))))

(defwidget utils []
  (box :spacing 10
    (button :class "icon screenshot" :onclick "./scripts/screenshot"
      (label :text "󰄄 "))
    (button :class "icon background-image" :onclick "./scripts/random-wallpaper"
      (label :text "󰲍 "))))

(defwindow bar
  :monitor 0
  :exclusive true
  :windowtype "dock"
  :wm-ignore false
  :geometry (geometry :x "0" :y "0" :width "100%" :anchor "top center")
  (bar))
